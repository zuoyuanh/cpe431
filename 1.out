{"types":[],"declarations":[{"line":1,"type":"int","id":"y"}],"functions":[{"line":3,"id":"foo","parameters":[{"line":3,"type":"int","id":"x"}],"return_type":"void","declarations":[{"line":5,"type":"int","id":"a"},{"line":5,"type":"int","id":"b"},{"line":5,"type":"int","id":"c"},{"line":5,"type":"int","id":"d"}],"body":[{"line":7,"stmt":"assign","source":{"line":7,"exp":"binary","operator":"+","lft":{"line":7,"exp":"id","id":"y"},"rht":{"line":7,"exp":"num","value":"1"}},"target":{"line":7,"id":"a"}},{"line":8,"stmt":"assign","source":{"line":8,"exp":"binary","operator":"+","lft":{"line":8,"exp":"id","id":"x"},"rht":{"line":8,"exp":"num","value":"1"}},"target":{"line":8,"id":"a"}},{"line":9,"stmt":"assign","source":{"line":9,"exp":"num","value":"3"},"target":{"line":9,"id":"a"}},{"line":10,"stmt":"assign","source":{"line":10,"exp":"num","value":"4"},"target":{"line":10,"id":"b"}},{"line":11,"stmt":"assign","source":{"line":11,"exp":"binary","operator":"+","lft":{"line":11,"exp":"id","id":"a"},"rht":{"line":11,"exp":"id","id":"b"}},"target":{"line":11,"id":"c"}},{"line":12,"stmt":"assign","source":{"line":12,"exp":"binary","operator":"+","lft":{"line":12,"exp":"id","id":"b"},"rht":{"line":12,"exp":"id","id":"c"}},"target":{"line":12,"id":"d"}},{"line":13,"stmt":"assign","source":{"line":13,"exp":"binary","operator":"*","lft":{"line":13,"exp":"id","id":"b"},"rht":{"line":13,"exp":"id","id":"c"}},"target":{"line":13,"id":"d"}},{"line":15,"stmt":"assign","source":{"line":15,"exp":"binary","operator":"-","lft":{"line":15,"exp":"num","value":"99"},"rht":{"line":15,"exp":"id","id":"a"}},"target":{"line":15,"id":"a"}},{"line":17,"stmt":"print","exp":{"line":17,"exp":"id","id":"a"},"endl":false},{"line":18,"stmt":"print","exp":{"line":18,"exp":"id","id":"b"},"endl":false},{"line":19,"stmt":"print","exp":{"line":19,"exp":"id","id":"c"},"endl":false},{"line":20,"stmt":"print","exp":{"line":20,"exp":"id","id":"d"},"endl":false},{"line":22,"stmt":"assign","source":{"line":22,"exp":"binary","operator":"/","lft":{"line":22,"exp":"id","id":"b"},"rht":{"line":22,"exp":"num","value":"0"}},"target":{"line":22,"id":"d"}},{"line":24,"stmt":"print","exp":{"line":24,"exp":"id","id":"d"},"endl":false},{"line":26,"stmt":"assign","source":{"line":26,"exp":"read"},"target":{"line":26,"id":"d"}},{"line":28,"stmt":"assign","source":{"line":28,"exp":"binary","operator":"+","lft":{"line":28,"exp":"id","id":"d"},"rht":{"line":28,"exp":"num","value":"1"}},"target":{"line":28,"id":"b"}},{"line":30,"stmt":"print","exp":{"line":30,"exp":"id","id":"b"},"endl":false}]},{"line":33,"id":"bar","parameters":[{"line":33,"type":"int","id":"x"},{"line":33,"type":"int","id":"y"}],"return_type":"int","declarations":[{"line":35,"type":"int","id":"a"},{"line":35,"type":"int","id":"b"}],"body":[{"line":37,"stmt":"assign","source":{"line":37,"exp":"num","value":"2"},"target":{"line":37,"id":"a"}},{"line":39,"stmt":"if","guard":{"line":39,"exp":"binary","operator":">","lft":{"line":39,"exp":"id","id":"x"},"rht":{"line":39,"exp":"id","id":"y"}},"then":{"stmt":"block","list":[{"line":41,"stmt":"assign","source":{"line":41,"exp":"num","value":"3"},"target":{"line":41,"id":"b"}}]},"else":{"stmt":"block","list":[{"line":45,"stmt":"assign","source":{"line":45,"exp":"num","value":"3"},"target":{"line":45,"id":"b"}}]}},{"line":48,"stmt":"return","exp":{"line":48,"exp":"binary","operator":"+","lft":{"line":48,"exp":"id","id":"a"},"rht":{"line":48,"exp":"id","id":"b"}}}]},{"line":51,"id":"baz","parameters":[{"line":51,"type":"int","id":"x"},{"line":51,"type":"int","id":"y"}],"return_type":"bool","declarations":[{"line":53,"type":"bool","id":"a"},{"line":53,"type":"bool","id":"b"}],"body":[{"line":55,"stmt":"assign","source":{"line":55,"exp":"true"},"target":{"line":55,"id":"a"}},{"line":57,"stmt":"if","guard":{"line":57,"exp":"binary","operator":">","lft":{"line":57,"exp":"id","id":"x"},"rht":{"line":57,"exp":"id","id":"y"}},"then":{"stmt":"block","list":[{"line":59,"stmt":"assign","source":{"line":59,"exp":"false"},"target":{"line":59,"id":"b"}}]},"else":{"stmt":"block","list":[{"line":63,"stmt":"assign","source":{"line":63,"exp":"false"},"target":{"line":63,"id":"b"}}]}},{"line":66,"stmt":"if","guard":{"line":66,"exp":"binary","operator":"||","lft":{"line":66,"exp":"id","id":"a"},"rht":{"line":66,"exp":"id","id":"b"}},"then":{"stmt":"block","list":[{"line":68,"stmt":"print","exp":{"line":68,"exp":"num","value":"1"},"endl":true}]},"else":{"stmt":"block","list":[{"line":72,"stmt":"print","exp":{"line":72,"exp":"num","value":"2"},"endl":true}]}},{"line":75,"stmt":"if","guard":{"line":75,"exp":"unary","operator":"!","operand":{"line":75,"exp":"id","id":"a"}},"then":{"stmt":"block","list":[{"line":77,"stmt":"print","exp":{"line":77,"exp":"num","value":"3"},"endl":true}]},"else":{"stmt":"block","list":[{"line":81,"stmt":"print","exp":{"line":81,"exp":"num","value":"4"},"endl":true}]}},{"line":84,"stmt":"return","exp":{"line":84,"exp":"binary","operator":"&&","lft":{"line":84,"exp":"id","id":"a"},"rht":{"line":84,"exp":"id","id":"b"}}}]},{"line":87,"id":"fbool","parameters":[{"line":87,"type":"bool","id":"b"}],"return_type":"void","declarations":[],"body":[]},{"line":91,"id":"quux","parameters":[{"line":91,"type":"int","id":"x"},{"line":91,"type":"int","id":"y"}],"return_type":"bool","declarations":[{"line":93,"type":"int","id":"a"},{"line":93,"type":"int","id":"b"},{"line":94,"type":"bool","id":"r"}],"body":[{"line":96,"stmt":"assign","source":{"line":96,"exp":"num","value":"1"},"target":{"line":96,"id":"a"}},{"line":98,"stmt":"if","guard":{"line":98,"exp":"binary","operator":">","lft":{"line":98,"exp":"id","id":"x"},"rht":{"line":98,"exp":"id","id":"y"}},"then":{"stmt":"block","list":[{"line":100,"stmt":"assign","source":{"line":100,"exp":"num","value":"2"},"target":{"line":100,"id":"b"}}]},"else":{"stmt":"block","list":[{"line":104,"stmt":"assign","source":{"line":104,"exp":"num","value":"2"},"target":{"line":104,"id":"b"}}]}},{"line":107,"stmt":"invocation","id":"fbool","args":[{"line":107,"exp":"binary","operator":"==","lft":{"line":107,"exp":"id","id":"a"},"rht":{"line":107,"exp":"id","id":"b"}}]},{"line":108,"stmt":"invocation","id":"fbool","args":[{"line":108,"exp":"binary","operator":"!=","lft":{"line":108,"exp":"id","id":"a"},"rht":{"line":108,"exp":"id","id":"b"}}]},{"line":109,"stmt":"invocation","id":"fbool","args":[{"line":109,"exp":"binary","operator":"<","lft":{"line":109,"exp":"id","id":"a"},"rht":{"line":109,"exp":"id","id":"b"}}]},{"line":110,"stmt":"invocation","id":"fbool","args":[{"line":110,"exp":"binary","operator":"<=","lft":{"line":110,"exp":"id","id":"a"},"rht":{"line":110,"exp":"id","id":"b"}}]},{"line":111,"stmt":"invocation","id":"fbool","args":[{"line":111,"exp":"binary","operator":">","lft":{"line":111,"exp":"id","id":"a"},"rht":{"line":111,"exp":"id","id":"b"}}]},{"line":112,"stmt":"invocation","id":"fbool","args":[{"line":112,"exp":"binary","operator":">=","lft":{"line":112,"exp":"id","id":"a"},"rht":{"line":112,"exp":"id","id":"b"}}]},{"line":113,"stmt":"invocation","id":"fbool","args":[{"line":113,"exp":"binary","operator":">=","lft":{"line":113,"exp":"num","value":"2"},"rht":{"line":113,"exp":"num","value":"2"}}]},{"line":114,"stmt":"invocation","id":"fbool","args":[{"line":114,"exp":"binary","operator":"<=","lft":{"line":114,"exp":"num","value":"2"},"rht":{"line":114,"exp":"num","value":"2"}}]},{"line":116,"stmt":"return","exp":{"line":116,"exp":"false"}}]},{"line":119,"id":"quux2","parameters":[{"line":119,"type":"int","id":"x"},{"line":119,"type":"int","id":"y"}],"return_type":"bool","declarations":[{"line":121,"type":"int","id":"a"},{"line":121,"type":"int","id":"b"},{"line":122,"type":"bool","id":"r"}],"body":[{"line":124,"stmt":"assign","source":{"line":124,"exp":"num","value":"1"},"target":{"line":124,"id":"a"}},{"line":126,"stmt":"if","guard":{"line":126,"exp":"binary","operator":">","lft":{"line":126,"exp":"id","id":"x"},"rht":{"line":126,"exp":"id","id":"y"}},"then":{"stmt":"block","list":[{"line":128,"stmt":"assign","source":{"line":128,"exp":"binary","operator":"+","lft":{"line":128,"exp":"id","id":"a"},"rht":{"line":128,"exp":"num","value":"1"}},"target":{"line":128,"id":"b"}}]},"else":{"stmt":"block","list":[{"line":132,"stmt":"assign","source":{"line":132,"exp":"num","value":"2"},"target":{"line":132,"id":"b"}}]}},{"line":135,"stmt":"invocation","id":"fbool","args":[{"line":135,"exp":"binary","operator":"==","lft":{"line":135,"exp":"id","id":"a"},"rht":{"line":135,"exp":"id","id":"b"}}]},{"line":136,"stmt":"invocation","id":"fbool","args":[{"line":136,"exp":"binary","operator":"!=","lft":{"line":136,"exp":"id","id":"a"},"rht":{"line":136,"exp":"id","id":"b"}}]},{"line":137,"stmt":"invocation","id":"fbool","args":[{"line":137,"exp":"binary","operator":"<","lft":{"line":137,"exp":"id","id":"a"},"rht":{"line":137,"exp":"id","id":"b"}}]},{"line":138,"stmt":"invocation","id":"fbool","args":[{"line":138,"exp":"binary","operator":"<=","lft":{"line":138,"exp":"id","id":"a"},"rht":{"line":138,"exp":"id","id":"b"}}]},{"line":139,"stmt":"invocation","id":"fbool","args":[{"line":139,"exp":"binary","operator":">","lft":{"line":139,"exp":"id","id":"a"},"rht":{"line":139,"exp":"id","id":"b"}}]},{"line":140,"stmt":"invocation","id":"fbool","args":[{"line":140,"exp":"binary","operator":">=","lft":{"line":140,"exp":"id","id":"a"},"rht":{"line":140,"exp":"id","id":"b"}}]},{"line":141,"stmt":"invocation","id":"fbool","args":[{"line":141,"exp":"binary","operator":">=","lft":{"line":141,"exp":"num","value":"2"},"rht":{"line":141,"exp":"num","value":"2"}}]},{"line":142,"stmt":"invocation","id":"fbool","args":[{"line":142,"exp":"binary","operator":"<=","lft":{"line":142,"exp":"num","value":"2"},"rht":{"line":142,"exp":"num","value":"2"}}]},{"line":144,"stmt":"return","exp":{"line":144,"exp":"false"}}]},{"line":147,"id":"flrgrl","parameters":[{"line":147,"type":"int","id":"x"},{"line":147,"type":"int","id":"y"}],"return_type":"int","declarations":[{"line":149,"type":"int","id":"a"},{"line":149,"type":"int","id":"b"},{"line":149,"type":"int","id":"c"}],"body":[{"line":151,"stmt":"assign","source":{"line":151,"exp":"num","value":"1"},"target":{"line":151,"id":"a"}},{"line":153,"stmt":"if","guard":{"line":153,"exp":"binary","operator":">","lft":{"line":153,"exp":"id","id":"x"},"rht":{"line":153,"exp":"id","id":"y"}},"then":{"stmt":"block","list":[{"line":155,"stmt":"assign","source":{"line":155,"exp":"binary","operator":"+","lft":{"line":155,"exp":"id","id":"a"},"rht":{"line":155,"exp":"num","value":"1"}},"target":{"line":155,"id":"b"}}]},"else":{"stmt":"block","list":[{"line":159,"stmt":"assign","source":{"line":159,"exp":"num","value":"2"},"target":{"line":159,"id":"b"}}]}},{"line":162,"stmt":"assign","source":{"line":162,"exp":"binary","operator":"+","lft":{"line":162,"exp":"id","id":"b"},"rht":{"line":162,"exp":"id","id":"b"}},"target":{"line":162,"id":"c"}},{"line":164,"stmt":"return","exp":{"line":164,"exp":"id","id":"c"}}]},{"line":167,"id":"blergh","parameters":[],"return_type":"int","declarations":[{"line":169,"type":"int","id":"a"}],"body":[{"line":171,"stmt":"assign","source":{"line":171,"exp":"num","value":"1"},"target":{"line":171,"id":"a"}},{"line":173,"stmt":"if","guard":{"line":173,"exp":"binary","operator":"<","lft":{"line":173,"exp":"num","value":"1"},"rht":{"line":173,"exp":"num","value":"2"}},"then":{"stmt":"block","list":[{"line":175,"stmt":"assign","source":{"line":175,"exp":"num","value":"3"},"target":{"line":175,"id":"a"}}]},"else":{"stmt":"block","list":[]}},{"line":181,"stmt":"return","exp":{"line":181,"exp":"id","id":"a"}}]},{"line":184,"id":"main","parameters":[],"return_type":"int","declarations":[],"body":[{"line":186,"stmt":"return","exp":{"line":186,"exp":"num","value":"0"}}]}]}
--- Generating LLVM Code ---
target triple="i686"

@y = common global i32 0, align 4

define void @foo(i32 %x)
{
%x null
@y null
%u0 %u0 = add i32 @y, 1

%a null
%u1 %u1 = add i32 %x, 1

%b null
%u2 %u2 = add i32 3, 4

%c null
%u3 %u3 = add i32 4, %u2

%d null
%u4 %u4 = mul i32 4, %u2

%u5 %u5 = sub i32 99, 3

%u6 %u6 = sdiv i32 4, 0

%u7 call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([4 x i8]* @.read, i32 0, i32 0), i32* @.read_scratch)
	%u7 = load i32* @.read_scratch

%u8 %u8 = add i32 %u7, 1

{%x=llvm.SSCPBottom@41975e01, @y=llvm.SSCPBottom@c2e1f26, %u0=llvm.SSCPTop@dcf3e99, %u1=llvm.SSCPTop@6d9c638, %u2=llvm.SSCPTop@7dc5e7b4, %u3=llvm.SSCPTop@1ee0005, %u4=llvm.SSCPTop@75a1cd57, %u5=llvm.SSCPTop@3d012ddd, %a=llvm.SSCPBottom@6f2b958e, %u6=llvm.SSCPTop@1eb44e46, %b=llvm.SSCPBottom@6504e3b2, %u7=llvm.SSCPBottom@515f550a, %c=llvm.SSCPBottom@626b2d4a, %u8=llvm.SSCPTop@5e91993f, %d=llvm.SSCPBottom@1c4af82c}
%x null
@y null
%u0 %u0 = add i32 @y, 1

%a null
%u1 %u1 = add i32 %x, 1

%b null
%u2 %u2 = add i32 3, 4

3+4
%c null
%u3 %u3 = add i32 4, %u2

4+7
%d null
%u4 %u4 = mul i32 4, %u2

%u5 %u5 = sub i32 99, 3

%u6 %u6 = sdiv i32 4, 0

%u7 call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([4 x i8]* @.read, i32 0, i32 0), i32* @.read_scratch)
	%u7 = load i32* @.read_scratch

%u8 %u8 = add i32 %u7, 1

{%x=llvm.SSCPBottom@379619aa, @y=llvm.SSCPBottom@cac736f, %u0=llvm.SSCPBottom@5e265ba4, %u1=llvm.SSCPBottom@156643d4, %u2=7, %u3=11, %u4=28, %u5=96, %a=llvm.SSCPBottom@123a439b, %u6=llvm.SSCPBottom@7de26db8, %b=llvm.SSCPBottom@1175e2db, %u7=llvm.SSCPBottom@36aa7bc2, %c=llvm.SSCPBottom@76ccd017, %u8=llvm.SSCPBottom@182decdb, %d=llvm.SSCPBottom@26f0a63f}
remove: %x
use %u1 = add i32 %x, 1

def %u1
remove: @y
use %u0 = add i32 @y, 1

def %u0
remove: %u0
remove: %a
remove: %u1
remove: %b
remove: %u2
use %u3 = add i32 4, %u2

def %u3
4+7
constant: %u31111
use %u4 = mul i32 4, %u2

def %u4
constant: %u42828
use call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u2)

def null
remove: %c
remove: %u3
remove: %d
remove: %u4
use call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u4)

def null
remove: %u5
use call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u5)

def null
remove: %u6
use call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u6)

def null
remove: %u7
use %u8 = add i32 %u7, 1

def %u8
remove: %u8
use call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u8)

def null
{%x=llvm.SSCPBottom@379619aa, @y=llvm.SSCPBottom@cac736f, %u0=llvm.SSCPBottom@5e265ba4, %u1=llvm.SSCPBottom@156643d4, %u2=7, %u3=11, %u4=28, %u5=96, %a=llvm.SSCPBottom@123a439b, %u6=llvm.SSCPBottom@7de26db8, %b=llvm.SSCPBottom@1175e2db, %u7=llvm.SSCPBottom@36aa7bc2, %c=llvm.SSCPBottom@76ccd017, %u8=llvm.SSCPBottom@182decdb, %d=llvm.SSCPBottom@26f0a63f}
LU1: 
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 96)
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 4)
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 7)
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 28)
	%u6 = sdiv i32 4, 0
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u6)
	call i32 (i8*, ...)* @scanf(i8* getelementptr inbounds ([4 x i8]* @.read, i32 0, i32 0), i32* @.read_scratch)
	%u7 = load i32* @.read_scratch
	%u8 = add i32 %u7, 1
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.print, i32 0, i32 0), i32 %u8)
	br label %LU0
LU0: 
	ret void
}

define i32 @bar(i32 %x, i32 %y)
{
%u13 %u13 = phi i32 [%u12, %LU6]

%a null
%b null
%x null
%u10 %u10 = phi i32 [2, %LU4], [2, %LU5]

%y null
%u9 %u9 = icmp sgt i32 %x, %y

%u12 %u12 = add i32 2, 3

%u11 %u11 = phi i32 [3, %LU4], [3, %LU5]

{%u13=llvm.SSCPTop@4361bd48, %x=llvm.SSCPBottom@53bd815b, %y=llvm.SSCPBottom@2401f4c3, %a=llvm.SSCPBottom@7637f22, %b=llvm.SSCPBottom@4926097b, %u10=llvm.SSCPTop@762efe5d, %u9=llvm.SSCPTop@5d22bbb7, %u12=llvm.SSCPTop@41a4555e, %u11=llvm.SSCPTop@3830f1c0}
%u13 %u13 = phi i32 [%u12, %LU6]

%a null
%b null
%x null
%u10 %u10 = phi i32 [2, %LU4], [2, %LU5]

%y null
%u9 %u9 = icmp sgt i32 %x, %y

%u12 %u12 = add i32 2, 3

2+3
%u11 %u11 = phi i32 [3, %LU4], [3, %LU5]

{%u13=llvm.SSCPTop@39ed3c8d, %x=llvm.SSCPBottom@71dac704, %y=llvm.SSCPBottom@123772c4, %a=llvm.SSCPBottom@2d363fb3, %b=llvm.SSCPBottom@7d6f77cc, %u10=2, %u9=llvm.SSCPBottom@5aaa6d82, %u12=5, %u11=3}
remove: %a
remove: %b
remove: %x
use %u9 = icmp sgt i32 %x, %y

def %u9
remove: %u10
use %u12 = add i32 2, 3

def %u12
2+3
constant: %u1255
remove: %y
use %u9 = icmp sgt i32 %x, %y

def %u9
remove: %u9
use br i1 %u9, label %LU4, label %LU5

def null
remove: %u12
use 
def %u12
bottom: %u12
use %u13 = phi i32 [%u12, %LU6]

def %u13
bottom: %u13
use ret i32 %u12

def null
remove: %u11
use %u12 = add i32 2, 3

def %u12
remove: %u12
use 
def %u12
use %u13 = phi i32 [%u12, %LU6]

def %u13
use ret i32 %u12

def null
remove: %u13
use ret i32 %u12

def null
{%u13=llvm.SSCPBottom@73a28541, %x=llvm.SSCPBottom@71dac704, %y=llvm.SSCPBottom@123772c4, %a=llvm.SSCPBottom@2d363fb3, %b=llvm.SSCPBottom@7d6f77cc, %u10=2, %u9=llvm.SSCPBottom@5aaa6d82, %u12=llvm.SSCPBottom@6f75e721, %u11=3}
LU3: 
	%u9 = icmp sgt i32 %x, %y
	br i1 %u9, label %LU4, label %LU5
LU4: 
	br label %LU6
LU5: 
	br label %LU6
LU6: 
	%u12 = add i32 2, 3
	br label %LU2
LU2: 
	ret i32 %u12
}

define i32 @baz(i32 %x, i32 %y)
{
%x null
%u21 %u21 = phi i1 [1, %LU12], [1, %LU13]

%y null
%u20 %u20 = or i1 1, 0

%u23 %u23 = phi i1 [1, %LU15], [1, %LU16]

%u22 	%u36 = zext i1 1 to i32
%u22 = sub i32 1, %u36

%u25 %u25 = phi i1 [0, %LU12], [0, %LU13]

%u24 %u24 = phi i1 [0, %LU15], [0, %LU16]

%u27 	%u27 = zext i1 %u26 to i32

%u26 %u26 = and i1 1, 0

%u18 %u18 = phi i1 [1, %LU9], [1, %LU10]

%a null
%u17 %u17 = icmp sgt i32 %x, %y

%u28 %u28 = phi i32 [%u27, %LU17]

%b null
%u19 %u19 = phi i1 [0, %LU9], [0, %LU10]

{%u21=llvm.SSCPTop@69222c14, %u20=llvm.SSCPTop@606d8acf, %u23=llvm.SSCPTop@782830e, %u22=llvm.SSCPTop@470e2030, %u25=llvm.SSCPTop@3fb4f649, %x=llvm.SSCPBottom@33833882, %u24=llvm.SSCPTop@200a570f, %y=llvm.SSCPBottom@16b3fc9e, %u27=llvm.SSCPTop@e2d56bf, %u26=llvm.SSCPTop@244038d0, %u18=llvm.SSCPTop@5680a178, %u17=llvm.SSCPTop@5fdef03a, %u28=llvm.SSCPTop@3b22cdd0, %u19=llvm.SSCPTop@1e81f4dc, %a=llvm.SSCPBottom@4d591d15, %b=llvm.SSCPBottom@65ae6ba4}
%x null
%u21 %u21 = phi i1 [1, %LU12], [1, %LU13]

%y null
%u20 %u20 = or i1 1, 0

%u23 %u23 = phi i1 [1, %LU15], [1, %LU16]

%u22 	%u36 = zext i1 1 to i32
	%u38 = zext i1 1 to i32
%u22 = sub i32 1, %u38

%u25 %u25 = phi i1 [0, %LU12], [0, %LU13]

%u24 %u24 = phi i1 [0, %LU15], [0, %LU16]

%u27 	%u27 = zext i1 %u26 to i32

%u26 %u26 = and i1 1, 0

%u18 %u18 = phi i1 [1, %LU9], [1, %LU10]

%a null
%u17 %u17 = icmp sgt i32 %x, %y

%u28 %u28 = phi i32 [%u27, %LU17]

%b null
%u19 %u19 = phi i1 [0, %LU9], [0, %LU10]

{%u21=1, %u20=1, %u23=1, %u22=0, %u25=0, %x=llvm.SSCPBottom@48cf768c, %u24=0, %y=llvm.SSCPBottom@59f95c5d, %u27=llvm.SSCPBottom@5ccd43c2, %u26=0, %u18=1, %u17=llvm.SSCPBottom@4aa8f0b4, %u28=llvm.SSCPBottom@7960847b, %u19=0, %a=llvm.SSCPBottom@6a6824be, %b=llvm.SSCPBottom@5c8da962}
remove: %x
use %u17 = icmp sgt i32 %x, %y

def %u17
remove: %u21
use 	%u36 = zext i1 1 to i32
	%u38 = zext i1 1 to i32
	%u40 = zext i1 1 to i32
%u22 = sub i32 1, %u40

def %u22
constant: %u2200
use %u23 = phi i1 [1, %LU15], [1, %LU16]

def %u23
constant: %u2311
remove: %y
use %u17 = icmp sgt i32 %x, %y

def %u17
remove: %u20
use br i1 %u20, label %LU12, label %LU13

def null
remove: %u23
use %u26 = and i1 1, 0

def %u26
constant: %u2600
remove: %u22
use 	%u42 = trunc i32 %u22 to i1
br i1 %u42, label %LU15, label %LU16

def null
remove: %u25
use %u24 = phi i1 [0, %LU15], [0, %LU16]

def %u24
constant: %u2400
remove: %u24
use %u26 = and i1 1, 0

def %u26
constant: %u2600
remove: %u27
use %u28 = phi i32 [%u27, %LU17]

def %u28
use ret i32 %u27

def null
remove: %u26
use 	%u27 = zext i1 %u26 to i32

def %u27
remove: %u18
use %u20 = or i1 1, 0

def %u20
constant: %u2011
use %u21 = phi i1 [1, %LU12], [1, %LU13]

def %u21
constant: %u2111
remove: %a
remove: %u17
use br i1 %u17, label %LU9, label %LU10

def null
remove: %u28
use ret i32 %u27

def null
remove: %b
remove: %u19
use %u20 = or i1 1, 0

def %u20
constant: %u2011
use %u25 = phi i1 [0, %LU12], [0, %LU13]

def %u25
constant: %u2500
{%u21=1, %u20=1, %u23=1, %u22=0, %u25=0, %x=llvm.SSCPBottom@48cf768c, %u24=0, %y=llvm.SSCPBottom@59f95c5d, %u27=llvm.SSCPBottom@5ccd43c2, %u26=0, %u18=1, %u17=llvm.SSCPBottom@4aa8f0b4, %u28=llvm.SSCPBottom@7960847b, %u19=0, %a=llvm.SSCPBottom@6a6824be, %b=llvm.SSCPBottom@5c8da962}
LU8: 
	%u17 = icmp sgt i32 %x, %y
	br i1 %u17, label %LU9, label %LU10
LU9: 
	br label %LU11
LU10: 
	br label %LU11
LU11: 
	br label %LU12
LU12: 
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.println, i32 0, i32 0), i32 1)
	br label %LU14
LU13: 
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.println, i32 0, i32 0), i32 2)
	br label %LU14
LU14: 
		%u42 = trunc i32 %u22 to i1
br i1 %u42, label %LU15, label %LU16
LU15: 
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.println, i32 0, i32 0), i32 3)
	br label %LU17
LU16: 
	call i32 (i8*, ...)* @printf(i8* getelementptr inbounds ([5 x i8]* @.println, i32 0, i32 0), i32 4)
	br label %LU17
LU17: 
	%u26 = and i1 1, 0
		br label %LU7
LU7: 
	ret i32 %u27
}

define void @fbool(i32 %b)
{
%b null
{%b=llvm.SSCPBottom@512ddf17}
%b null
{%b=llvm.SSCPBottom@2c13da15}
remove: %b
{%b=llvm.SSCPBottom@2c13da15}
LU19: 
	br label %LU18
LU18: 
	ret void
}

define i32 @quux(i32 %x, i32 %y)
{
%r null
%u50 %u50 = icmp sgt i32 1, 2

%u52 %u52 = icmp sge i32 2, 2

%u51 %u51 = icmp sge i32 1, 2

%x null
%u43 %u43 = icmp sgt i32 %x, %y

%u54 	%u54 = zext i1 0 to i32

%y null
%u53 %u53 = icmp sle i32 2, 2

%u45 %u45 = phi i32 [2, %LU22], [2, %LU23]

%u56 %u56 = phi i32 [%u54, %LU24]

%u44 %u44 = phi i32 [1, %LU22], [1, %LU23]

%u47 %u47 = icmp ne i32 1, 2

%u46 %u46 = icmp eq i32 1, 2

%u49 %u49 = icmp sle i32 1, 2

%u48 %u48 = icmp slt i32 1, 2

%a null
%b null
{%u50=llvm.SSCPTop@77556fd, %u52=llvm.SSCPTop@368239c8, %r=llvm.SSCPBottom@9e89d68, %u51=llvm.SSCPTop@3b192d32, %u43=llvm.SSCPTop@16f65612, %u54=llvm.SSCPTop@311d617d, %u53=llvm.SSCPTop@7c53a9eb, %u45=llvm.SSCPTop@ed17bee, %u56=llvm.SSCPTop@2a33fae0, %u44=llvm.SSCPTop@707f7052, %u47=llvm.SSCPTop@11028347, %x=llvm.SSCPBottom@14899482, %u46=llvm.SSCPTop@21588809, %y=llvm.SSCPBottom@2aae9190, %u49=llvm.SSCPTop@2f333739, %u48=llvm.SSCPTop@77468bd9, %a=llvm.SSCPBottom@12bb4df8, %b=llvm.SSCPBottom@4cc77c2e}
%r null
%u50 %u50 = icmp sgt i32 1, 2

%u52 %u52 = icmp sge i32 2, 2

%u51 %u51 = icmp sge i32 1, 2

%x null
%u43 %u43 = icmp sgt i32 %x, %y

%u54 	%u54 = zext i1 0 to i32

%y null
%u53 %u53 = icmp sle i32 2, 2

%u45 %u45 = phi i32 [2, %LU22], [2, %LU23]

%u56 %u56 = phi i32 [%u54, %LU24]

%u44 %u44 = phi i32 [1, %LU22], [1, %LU23]

%u47 %u47 = icmp ne i32 1, 2

%u46 %u46 = icmp eq i32 1, 2

%u49 %u49 = icmp sle i32 1, 2

%u48 %u48 = icmp slt i32 1, 2

%a null
%b null
{%u50=0, %u52=0, %r=llvm.SSCPBottom@7a7b0070, %u51=0, %u43=llvm.SSCPBottom@39a054a5, %u54=llvm.SSCPBottom@71bc1ae4, %u53=0, %u45=2, %u56=llvm.SSCPBottom@6ed3ef1, %u44=1, %u47=0, %x=llvm.SSCPBottom@2437c6dc, %u46=0, %y=llvm.SSCPBottom@1f89ab83, %u49=0, %u48=0, %a=llvm.SSCPBottom@e73f9ac, %b=llvm.SSCPBottom@61064425}
remove: %r
remove: %u50
use 	%u60 = zext i1 %u50 to i32
	call void @fbool(i32 %u60)

def null
remove: %u52
use 	%u61 = zext i1 %u52 to i32
	call void @fbool(i32 %u61)

def null
remove: %u51
use 	%u62 = zext i1 %u51 to i32
	call void @fbool(i32 %u62)

def null
remove: %x
use %u43 = icmp sgt i32 %x, %y

def %u43
remove: %u43
use br i1 %u43, label %LU22, label %LU23

def null
remove: %u54
use %u56 = phi i32 [%u54, %LU24]

def %u56
use ret i32 %u54

def null
remove: %y
use %u43 = icmp sgt i32 %x, %y

def %u43
remove: %u53
use 	%u63 = zext i1 %u53 to i32
	call void @fbool(i32 %u63)

def null
remove: %u45
use %u46 = icmp eq i32 1, 2

def %u46
constant: %u4600
use %u47 = icmp ne i32 1, 2

def %u47
constant: %u4700
use %u48 = icmp slt i32 1, 2

def %u48
constant: %u4800
use %u49 = icmp sle i32 1, 2

def %u49
constant: %u4900
use %u50 = icmp sgt i32 1, 2

def %u50
constant: %u5000
use %u51 = icmp sge i32 1, 2

def %u51
constant: %u5100
remove: %u56
use ret i32 %u54

def null
remove: %u44
use %u46 = icmp eq i32 1, 2

def %u46
constant: %u4600
use %u47 = icmp ne i32 1, 2

def %u47
constant: %u4700
use %u48 = icmp slt i32 1, 2

def %u48
constant: %u4800
use %u49 = icmp sle i32 1, 2

def %u49
constant: %u4900
use %u50 = icmp sgt i32 1, 2

def %u50
constant: %u5000
use %u51 = icmp sge i32 1, 2

def %u51
constant: %u5100
remove: %u47
use 	%u64 = zext i1 %u47 to i32
	call void @fbool(i32 %u64)

def null
remove: %u46
use 	%u65 = zext i1 %u46 to i32
	call void @fbool(i32 %u65)

def null
remove: %u49
use 	%u66 = zext i1 %u49 to i32
	call void @fbool(i32 %u66)

def null
remove: %u48
use 	%u67 = zext i1 %u48 to i32
	call void @fbool(i32 %u67)

def null
remove: %a
remove: %b
{%u50=0, %u52=0, %r=llvm.SSCPBottom@7a7b0070, %u51=0, %u43=llvm.SSCPBottom@39a054a5, %u54=llvm.SSCPBottom@71bc1ae4, %u53=0, %u45=2, %u56=llvm.SSCPBottom@6ed3ef1, %u44=1, %u47=0, %x=llvm.SSCPBottom@2437c6dc, %u46=0, %y=llvm.SSCPBottom@1f89ab83, %u49=0, %u48=0, %a=llvm.SSCPBottom@e73f9ac, %b=llvm.SSCPBottom@61064425}
LU21: 
	%u43 = icmp sgt i32 %x, %y
	br i1 %u43, label %LU22, label %LU23
LU22: 
	br label %LU24
LU23: 
	br label %LU24
LU24: 
		%u65 = zext i1 %u46 to i32
	call void @fbool(i32 0)
		%u64 = zext i1 %u47 to i32
	call void @fbool(i32 0)
		%u67 = zext i1 %u48 to i32
	call void @fbool(i32 0)
		%u66 = zext i1 %u49 to i32
	call void @fbool(i32 0)
		%u60 = zext i1 %u50 to i32
	call void @fbool(i32 0)
		%u62 = zext i1 %u51 to i32
	call void @fbool(i32 0)
		%u61 = zext i1 %u52 to i32
	call void @fbool(i32 0)
		%u63 = zext i1 %u53 to i32
	call void @fbool(i32 0)
		%u54 = zext i1 0 to i32
	br label %LU20
LU20: 
	ret i32 %u54
}

define i32 @quux2(i32 %x, i32 %y)
{
%r null
%u70 %u70 = phi i32 [1, %LU27], [1, %LU28]

%u80 	%u80 = zext i1 0 to i32

%u72 %u72 = icmp eq i32 1, %u71

%u71 %u71 = phi i32 [%u69, %LU27], [2, %LU28]

%u82 %u82 = phi i32 [%u80, %LU29]

%u74 %u74 = icmp slt i32 1, %u71

%u73 %u73 = icmp ne i32 1, %u71

%x null
%u76 %u76 = icmp sgt i32 1, %u71

%y null
%u75 %u75 = icmp sle i32 1, %u71

%u78 %u78 = icmp sge i32 2, 2

%u77 %u77 = icmp sge i32 1, %u71

%u69 %u69 = add i32 1, 1

%u68 %u68 = icmp sgt i32 %x, %y

%u79 %u79 = icmp sle i32 2, 2

%a null
%b null
{%u70=llvm.SSCPTop@7b1d7fff, %u80=llvm.SSCPTop@299a06ac, %u72=llvm.SSCPTop@383534aa, %u71=llvm.SSCPTop@6bc168e5, %u82=llvm.SSCPTop@7b3300e5, %u74=llvm.SSCPTop@2e5c649, %r=llvm.SSCPBottom@136432db, %u73=llvm.SSCPTop@7382f612, %u76=llvm.SSCPTop@1055e4af, %u75=llvm.SSCPTop@3caeaf62, %u78=llvm.SSCPTop@e6ea0c6, %u77=llvm.SSCPTop@6a38e57f, %u69=llvm.SSCPTop@5577140b, %x=llvm.SSCPBottom@1c6b6478, %u68=llvm.SSCPTop@67f89fa3, %u79=llvm.SSCPTop@4ac68d3e, %y=llvm.SSCPBottom@277c0f21, %a=llvm.SSCPBottom@6073f712, %b=llvm.SSCPBottom@43556938}
%r null
%u70 %u70 = phi i32 [1, %LU27], [1, %LU28]

%u80 	%u80 = zext i1 0 to i32

%u72 %u72 = icmp eq i32 1, %u71

%u71 %u71 = phi i32 [%u69, %LU27], [2, %LU28]

%u82 %u82 = phi i32 [%u80, %LU29]

%u74 %u74 = icmp slt i32 1, %u71

%u73 %u73 = icmp ne i32 1, %u71

%x null
%u76 %u76 = icmp sgt i32 1, %u71

%y null
%u75 %u75 = icmp sle i32 1, %u71

%u78 %u78 = icmp sge i32 2, 2

%u77 %u77 = icmp sge i32 1, %u71

%u69 %u69 = add i32 1, 1

1+1
%u68 %u68 = icmp sgt i32 %x, %y

%u79 %u79 = icmp sle i32 2, 2

%a null
%b null
{%u70=1, %u80=llvm.SSCPBottom@3d04a311, %u72=1, %u71=llvm.SSCPTop@7a46a697, %u82=llvm.SSCPBottom@5f205aa, %u74=1, %r=llvm.SSCPBottom@6d86b085, %u73=1, %u76=1, %u75=1, %u78=0, %u77=1, %u69=2, %x=llvm.SSCPBottom@75828a0f, %u68=llvm.SSCPBottom@3abfe836, %u79=0, %y=llvm.SSCPBottom@2ff5659e, %a=llvm.SSCPBottom@77afea7d, %b=llvm.SSCPBottom@161cd475}
remove: %r
remove: %u70
use %u72 = icmp eq i32 1, %u71

def %u72
constant: %u7211
use %u73 = icmp ne i32 1, %u71

def %u73
constant: %u7311
use %u74 = icmp slt i32 1, %u71

def %u74
constant: %u7411
use %u75 = icmp sle i32 1, %u71

def %u75
constant: %u7511
use %u76 = icmp sgt i32 1, %u71

def %u76
constant: %u7611
use %u77 = icmp sge i32 1, %u71

def %u77
constant: %u7711
remove: %u80
use %u82 = phi i32 [%u80, %LU29]

def %u82
use ret i32 %u80

def null
remove: %u72
use 	%u86 = zext i1 %u72 to i32
	call void @fbool(i32 %u86)

def null
remove: %u82
use ret i32 %u80

def null
remove: %u74
use 	%u87 = zext i1 %u74 to i32
	call void @fbool(i32 %u87)

def null
remove: %u73
use 	%u88 = zext i1 %u73 to i32
	call void @fbool(i32 %u88)

def null
remove: %x
use %u68 = icmp sgt i32 %x, %y

def %u68
remove: %u76
use 	%u89 = zext i1 %u76 to i32
	call void @fbool(i32 %u89)

def null
remove: %y
use %u68 = icmp sgt i32 %x, %y

def %u68
remove: %u75
use 	%u90 = zext i1 %u75 to i32
	call void @fbool(i32 %u90)

def null
remove: %u78
use 	%u91 = zext i1 %u78 to i32
	call void @fbool(i32 %u91)

def null
remove: %u77
use 	%u92 = zext i1 %u77 to i32
	call void @fbool(i32 %u92)

def null
remove: %u69
use %u71 = phi i32 [%u69, %LU27], [2, %LU28]

def %u71
remove: %u68
use br i1 %u68, label %LU27, label %LU28

def null
remove: %u79
use 	%u93 = zext i1 %u79 to i32
	call void @fbool(i32 %u93)

def null
remove: %a
remove: %b
remove: %u71
use %u72 = icmp eq i32 1, %u71

def %u72
constant: %u7211
use %u73 = icmp ne i32 1, %u71

def %u73
constant: %u7311
use %u74 = icmp slt i32 1, %u71

def %u74
constant: %u7411
use %u75 = icmp sle i32 1, %u71

def %u75
constant: %u7511
use %u76 = icmp sgt i32 1, %u71

def %u76
constant: %u7611
use %u77 = icmp sge i32 1, %u71

def %u77
constant: %u7711
{%u70=1, %u80=llvm.SSCPBottom@3d04a311, %u72=1, %u71=llvm.SSCPTop@532760d8, %u82=llvm.SSCPBottom@5f205aa, %u74=1, %r=llvm.SSCPBottom@6d86b085, %u73=1, %u76=1, %u75=1, %u78=0, %u77=1, %u69=2, %x=llvm.SSCPBottom@75828a0f, %u68=llvm.SSCPBottom@3abfe836, %u79=0, %y=llvm.SSCPBottom@2ff5659e, %a=llvm.SSCPBottom@77afea7d, %b=llvm.SSCPBottom@161cd475}
LU26: 
	%u68 = icmp sgt i32 %x, %y
	br i1 %u68, label %LU27, label %LU28
LU27: 
	br label %LU29
LU28: 
	br label %LU29
LU29: 
		%u86 = zext i1 %u72 to i32
	call void @fbool(i32 1)
		%u88 = zext i1 %u73 to i32
	call void @fbool(i32 1)
		%u87 = zext i1 %u74 to i32
	call void @fbool(i32 1)
		%u90 = zext i1 %u75 to i32
	call void @fbool(i32 1)
		%u89 = zext i1 %u76 to i32
	call void @fbool(i32 1)
		%u92 = zext i1 %u77 to i32
	call void @fbool(i32 1)
		%u91 = zext i1 %u78 to i32
	call void @fbool(i32 0)
		%u93 = zext i1 %u79 to i32
	call void @fbool(i32 0)
		%u80 = zext i1 0 to i32
	br label %LU25
LU25: 
	ret i32 %u80
}

define i32 @flrgrl(i32 %x, i32 %y)
{
%a null
%b null
%c null
%u94 %u94 = icmp sgt i32 %x, %y

%u96 %u96 = phi i32 [%u95, %LU32], [2, %LU33]

%u95 %u95 = add i32 1, 1

%x null
%u98 %u98 = phi i32 [%u97, %LU34]

%y null
%u97 %u97 = add i32 %u96, %u96

{%x=llvm.SSCPBottom@57fa26b7, %y=llvm.SSCPBottom@5f8ed237, %u94=llvm.SSCPTop@2f410acf, %a=llvm.SSCPBottom@47089e5f, %u96=llvm.SSCPTop@4141d797, %b=llvm.SSCPBottom@68f7aae2, %u95=llvm.SSCPTop@4f47d241, %c=llvm.SSCPBottom@4c3e4790, %u98=llvm.SSCPTop@38cccef, %u97=llvm.SSCPTop@5679c6c6}
%a null
%b null
%c null
%u94 %u94 = icmp sgt i32 %x, %y

%u96 %u96 = phi i32 [%u95, %LU32], [2, %LU33]

%u95 %u95 = add i32 1, 1

1+1
%x null
%u98 %u98 = phi i32 [%u97, %LU34]

%y null
%u97 %u97 = add i32 %u96, %u96

{%x=llvm.SSCPBottom@27ddd392, %y=llvm.SSCPBottom@19e1023e, %u94=llvm.SSCPBottom@7cef4e59, %a=llvm.SSCPBottom@64b8f8f4, %u96=llvm.SSCPTop@2db0f6b2, %b=llvm.SSCPBottom@3cd1f1c8, %u95=2, %c=llvm.SSCPBottom@3a4afd8d, %u98=llvm.SSCPTop@1996cd68, %u97=llvm.SSCPTop@3339ad8e}
remove: %a
remove: %b
remove: %c
remove: %u94
use br i1 %u94, label %LU32, label %LU33

def null
remove: %u95
use %u96 = phi i32 [%u95, %LU32], [2, %LU33]

def %u96
remove: %x
use %u94 = icmp sgt i32 %x, %y

def %u94
remove: %y
use %u94 = icmp sgt i32 %x, %y

def %u94
remove: %u96
use %u97 = add i32 %u96, %u96

def %u97
remove: %u97
use 
def %u97
bottom: %u97
use %u98 = phi i32 [%u97, %LU34]

def %u98
bottom: %u98
use ret i32 %u97

def null
remove: %u97
use 
def %u97
use %u98 = phi i32 [%u97, %LU34]

def %u98
use ret i32 %u97

def null
remove: %u98
use ret i32 %u97

def null
{%x=llvm.SSCPBottom@27ddd392, %y=llvm.SSCPBottom@19e1023e, %u94=llvm.SSCPBottom@7cef4e59, %a=llvm.SSCPBottom@64b8f8f4, %u96=llvm.SSCPTop@555590, %b=llvm.SSCPBottom@3cd1f1c8, %u95=2, %c=llvm.SSCPBottom@3a4afd8d, %u98=llvm.SSCPBottom@6d1e7682, %u97=llvm.SSCPBottom@424c0bc4}
LU31: 
	%u94 = icmp sgt i32 %x, %y
	br i1 %u94, label %LU32, label %LU33
LU32: 
	br label %LU34
LU33: 
	br label %LU34
LU34: 
	%u96 = phi i32 [2, %LU32], [2, %LU33]
	%u97 = add i32 %u96, %u96
	br label %LU30
LU30: 
	ret i32 %u97
}

define i32 @blergh()
{
%u102 %u102 = phi i32 [3, %LU37], [1, %LU38]

%u101 %u101 = icmp slt i32 1, 2

%a null
%u103 %u103 = phi i32 [%u102, %LU39]

{%u102=llvm.SSCPTop@3c679bde, %u101=llvm.SSCPTop@16b4a017, %a=llvm.SSCPBottom@8807e25, %u103=llvm.SSCPTop@2a3046da}
%u102 %u102 = phi i32 [3, %LU37], [1, %LU38]

%u101 %u101 = icmp slt i32 1, 2

%a null
%u103 %u103 = phi i32 [%u102, %LU39]

{%u102=llvm.SSCPBottom@2a098129, %u101=0, %a=llvm.SSCPBottom@198e2867, %u103=llvm.SSCPBottom@12f40c25}
remove: %u102
use 
def %u102
use %u103 = phi i32 [%u102, %LU39]

def %u103
use ret i32 %u102

def null
remove: %u101
use br i1 %u101, label %LU37, label %LU38

def null
remove: %a
remove: %u103
use ret i32 %u102

def null
{%u102=llvm.SSCPBottom@2a098129, %u101=0, %a=llvm.SSCPBottom@198e2867, %u103=llvm.SSCPBottom@12f40c25}
LU36: 
	br label %LU38
LU37: 
	br label %LU39
LU38: 
	br label %LU39
LU39: 
	%u102 = phi i32 [3, %LU37], [1, %LU38]
	br label %LU35
LU35: 
	ret i32 %u102
}

define i32 @main()
{
%u106 %u106 = phi i32 [0, %LU41]

{%u106=llvm.SSCPTop@3ada9e37}
%u106 %u106 = phi i32 [0, %LU41]

{%u106=0}
remove: %u106
use ret i32 0

def null
{%u106=0}
LU41: 
	br label %LU40
LU40: 
	ret i32 0
}

declare i8* @malloc(i32)
declare void @free(i8*)
declare i32 @printf(i8*, ...)
declare i32 @scanf(i8*, ...)
@.println = private unnamed_addr constant [5 x i8] c"%ld\0A\00", align 1
@.print = private unnamed_addr constant [5 x i8] c"%ld \00", align 1
@.read = private unnamed_addr constant [4 x i8] c"%ld\00", align 1
@.read_scratch = common global i32 0, align 8

